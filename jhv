def notify_agent_node(state: WorkflowState) -> WorkflowState:
    logging.info("Calling NotifyAgent")
    # Notification after feedback: use feedback data
    issue_text = ""
    if state.get("issue_text") and isinstance(state["issue_text"], dict):
        issue_text = state["issue_text"].get("issue_text", "")
    status_value = state["validation_result"].get("valid")
    if status_value is True:
        status_str = "validated"
    elif status_value is False:
        status_str = "rejected"
    else:
        status_str = str(status_value)
    extracted_text = state["extracted_data"].get("ocr_text", "")
    if not extracted_text:
        extracted_text = state["validation_result"].get("reason", "")
    payload = {
        "document_type": state["doc_type"],
        "status": status_str,
        "extracted_text": extracted_text,
        "phone": state.get("mobile", ""),
        "issue_text": issue_text,
        "username": state.get("username", ""),
        "email": state.get("user", {}).get("email", "")
    }
    result = agent_post(AGENT_ENDPOINTS["notify"], "/notify", state=state, json=payload)
    state['notification'] = result
    return state
